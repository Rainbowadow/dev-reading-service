name: Build and Push docker image to AWS ECR

on:
  push:
    branches: 
      - "development"
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - warning
          - critical
      tags:
        description: 'Purpose of Run This Workflow?'
        required: false
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
# Determine Next Version for creating new releases and image tags
      - name: Determine Next Version
        id: next_version
        run: |
          # Fetch all tags
          git fetch --tags
          
          LATEST_TAG=$(git tag -l | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)

          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v0.0.0"
          fi
          
          # Increment the patch version
          NEXT_TAG=$(echo $LATEST_TAG | awk -F. '{print $1"."$2"."$3+1}')
          
          # Output the next version
          echo "::set-output name=tag::$NEXT_TAG"
          echo "Next version: $NEXT_TAG"

# Create Release with tag
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN_rainbow }}
        with:
          tag_name: ${{ steps.next_version.outputs.tag }}
          release_name: Release ${{ steps.next_version.outputs.tag }}
          draft: false
          prerelease: false
        
# Build Docker Image
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Extract repository name
        id: extract_repository_name
        run: |
          REPOSITORY_NAME="${GITHUB_REPOSITORY##*/}"
          echo "REPOSITORY_NAME=$REPOSITORY_NAME" >> $GITHUB_ENV
          echo "::set-output name=repository_name::$REPOSITORY_NAME"

      - name: Build Docker image
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.REPOSITORY_NAME }}
          IMAGE_TAG: ${{ steps.next_version.outputs.tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

# Tag Docker Image and push to ECR
      - name: Push Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          ECR_REPOSITORY: dev-reading-service
          IMAGE_TAG: ${{ steps.next_version.outputs.tag }}
        run: |
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
